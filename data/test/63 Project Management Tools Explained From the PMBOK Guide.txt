hi everyone we're going to be going through 63 project management tools that you absolutely must know to have success
in your project and on your project management exams how many of these tools do you know already the best part about
this is we'll be using them in an example project with a business called pet buddy where Samantha is the business
owner who wants to create the Uber for pet sitters she'll be working with the project team to uncover her requirements
and deliver her product to the marketplace we're going to be going over these project tools in our project from start to finish from initiation through
to scope schedule budget quality and risk and as we kick off our project we'll be going over the tools to
initiate our project while also Gathering our stakeholders at the same time let's get into the first two
initiation tools starting with our project business case now with our business case remember it's a
feasibility study is it worthwhile doing this project in the first place so we usually run through a summary the
current issue or the problem that we're trying to address and then any solutions that we're going
to address them with which is going to be our project and then lastly a recommendation this is our business case
to see if we're kicking off the project in the first place and if our business case tells us it's a good idea to do the
project we can initiate the project with our project Charter in this case Samantha remember our business owner
will start putting this together and she may do this with the project manager in this case it's going to be Billy Billy
and Samantha will get together put this together uh and then Samantha will approve those Resources by signing off
on the project Charter she'll sign off on the funding and on the people needed
and that way our project can start it can initiate so just quickly uh here's a
good look at our project got a nice project background and a description high level details start and finish
who's the project manager who's the project sponsor what's the project name uh what are the project details why did
we start it the benefit to cost ratio there is looking pretty good the key requirements so high level requirements
we've got there uh these are our initial features that we've put together what are the expected benefits increased
Revenue uh and increased Revenue through the mobile application and for our customers they can get trusted reviewed
pet sitters and pet sitters get an easy way to start a side hustle or start a new business or get new business so the
estimated cost is $800,000 for our full development team estimated miles Stones
we've got in there as well so all of this is just high level stuff so it's a really good way to see at a glance what
our project is uh proposed to look like here are our Milestones feature 1
through 7 here's the project team and the stakeholders in the business who are going to be impacted any highlevel risks
that we have seen and how do we know when the project is complete we've got a first working but version of the pet
buddy mobile app released to the Mobile store and that is our project Charter as
we go about initiating our project we're going to need to find all of the stakeholders we need to work with and
how we're going to work with them using these six stakeholder management tools and the first one we're going to use is
our organizational breakdown structure or just an organizational chart sometimes it's called this is from the
business from the pet buddy business and as you can see we've got Samantha who's the business owner at the top here now
the reason why we use this is so we can figure out all of the stakeholders and find those stakeholders within the
business that we're working so we've got customer service manager marketing managers operations managers and it
support whenever we're starting a new project we always want to check the organizational chart just so we know
we're engaging the right stakeholders and finding the right stakeholders now when we've got the stakeholders that we
need and we're forming a project team we're going to use a resource breakdown structure or RBS so these are the
resources within our project or could be a project organizational chart we could call it as well so again Samantha is
going to be our project sponsor she's the business owner but now we have our project team with Billy our project
manager our business analysts and our developers and our testers who are going
to help create this pet buddy mobile app you could also do this in a spreadsheet
if you wanted uh but this is just a nice way to see it all decomposed uh in a proper breakdown structure once we've
captured all the people people that we want to work with and even the people in our project team we're going to put
everyone we need in our stakeholder register and we're going to do this if
you get questions when you're taking your PMP exam always we can find stakeholders in the stakeholder register
and we always want to update the stakeholder register if we get new stakeholders too so we put their name
their role and then the responsibility for example the uh the owner Samantha is
going to be our project sponsor providing the resources the funding and helps remove any escalated issues that
we can't remove ourselves then we've got people in operations and marketing and we can put the details for how they're
going to help us on the project so do they have a responsibility on the project or not let's put that here we
can also put their stakeholder influence and impact so do they have an influence
over the project and is our project having a high impact on their area or on
their daily work so usually we rate these from one to 10 there's a few different ways to classify your
stakeholders but impact and influence is my favorite and this is how it looks if we putting that together on a
stakeholder Matrix or a stakeholder map so as you can see Samantha again is our
uh business owner or our project sponsor so the impact is quite high of the
change but also her level of influence is extremely high cuz she controls the resources and the funding so we really
want to collaborate with Samantha if if it's a high level of influence but a low
impact from the project then we can just maintain communication if it's a high impact like our front level staff here
who are looking after the pets but they may not have a high influence over our project then uh we're going to impact
them quite a lot we need to keep them informed over here and if it's low influence and low impact then we just
need to monitor them as they go along and as the project goes along that's our stakeholder map now there is another way
to do it and that's our salience chart that just ranks people by their power their legitimacy and the urgency of uh
of us getting the information to them so again if it has all three they are a
definitive stakeholder that we really need to engage a lot uh but legitimacy so how legitimate is their involvement
in our project and how much power do they have over the project and how urgent is it that we get that
information to them again so a lot of different areas we can this is also called a 3D chart CU there's three areas
or a cube Matrix um but you can show it as a ven diagram here which is another way that is our salience chart now the
last one as we're going along on our project we're going to need to figure out how engaged our stakeholders are and
what we've got here is c for the current uh state of Engagement and D for their
desired state of Engagement and what we do with uh with our stakeholder engagement Matrix we have unaware
resistant neutral supportive and leading ideally we want our team members to be
supportive or leading unless they're not really involved in the project and then they can just be neutral but let's say
Sophie over here in marketing is unaware currently of our project at all but we
actually need her to be leading the project because we need her marketing input and we need her help with
marketing the app once it's created same with Lucas he from operations he is
currently neutral but we really need him to be supportive and Samantha is supportive she's doing okay but we need
her to be leading the charge so when this happens we just want to engage more
communicate more make sure we're getting the right information and also providing
the right information to these stakeholders to improve that engagement and those are all the stakeholder tools
that you're going to come across and the pach guide as we've shown on our pet buddy Journey now there are still seven
other project initiation tools we can use in the early stages of our project to make sure we're on track and we can
start with a tool like benchmarking to compare other businesses to ourselves and find the best practices out there in
the market we've got our pet buddy mobile app and the potential features
here and we're going to rate them do we have them or do our competitors have them as we go through these and if we
develop all of these features pet buddy will stand out out amongst our
competitors who don't have all of these features just yet so that's benchmarking
against our competitors and where we might be able to improve we can also rate and comment on those features so if
we had all of our uh other competitors down the left here then we could rate our features versus uh our competitors
features and give an honest feedback on where we might be able to improve now that we've looked at the market and
what's out there we also want to do a make or buy analysis is it better for us to make it inhouse or is it better to
for us to buy it from a vendor so what we're going to do is here is our cost to
make we've got some costs here with developers business integration our senior user cost project management team
or project manager and payment systems and so all together $800,000 is the initial cost and then ongoing $350,000 a
year now and we can see this in a beautiful little chart here the cost to buy is down here so it's a little bit
less $600,000 a year to buy it from a vendor uh and just wh label this this
application but over time the costs are still high so over time as you can see
it becomes more viable for us to have this inhouse by the second year and that
Gap is only going to get bigger so for that purpose we can see that the most effective option is for us to make it
inh housee at this stage and that's our make or buy analysis now we're also going to need to do our cost benefit
analysis is the benefit from this project going to be enough to justify the cost for our project pet buddy we've
separated the costs and benefits over into year-by-year analysis here in the first year it's going to cost the
project $800,000 and then less every year after that but the benefits the first year
there are not many benefits but over time we get more and more benefits from mobile app revenue and increased
location Revenue at the pet buddy location so now our cost to benefit analysis looks like this at first it's
not worthwhile but by the time we get to the second year and third year our benefits outweigh the costs giving us a
1 to 2.6 cost to benefit ratio and making the project worthwhile now a
project Charter isn't the only tool we'll use to initiate a project if we're working in a startup situation or even
if you're not you might use a business model canvas a business model canvas asks all these questions on one page
about our potential product to make sure we're on the right track we're going to ask things like who is our customer and
who is our customer segment what is the value proposition we're bringing to that customer what are the key activities
we're going to do to bring that value to the customer who are the key Partners we're going to need or the key resources
we're going to need and what channels are we delivering that value through and lastly the cost structure for example is
it subscription model or one-off payments or is it a service or is it a product and revenue streams what are the
different revenue streams bringing money in from this particular product all of this combines to a wonderful way to see
our project on a page and it's very similar when we're looking at the lean canvas business plan this is a modified
version of the business model canvas but more with a Lean Startup or a Toyota production system idea behind it and
here we're asking things like who is our customer to start with but what is our unfair Advantage what is something that
cannot be copied or easily bought so it's the moat around our product to keep
us safe from competitors what's our customer problem and how are we solving that with our solution and unique value
that we're bringing to the marketplace and this is where our high level concept comes into it also for example the
YouTube is like flicker for videos and uh flicker is not even really that much around anymore but back then that's what
they used to describe YouTube and for us we are the Uber of pet sitters if you
remember so that's the analogy the high level concept that we're using to describe the project so that everyone is
on the same page now of course that's not the only way to do it we could be using deake and deake is from Six Sigma
if you remember uh so we could use this to initiate our project as well with a predefined checklist so we want to
narrow down the problem and we want to include a project Charter here uh so what's the Gap from where we are to
where we want to be and that's going to look like a few of these documents here a business case and everything uh and a
little description then we want to define the problem and we can do that with flowcharts uh CYO value stream Maps
uh critical to qualities or ctqs uh or line graphs or a gap analysis
as we Define the problem here's a value stream map uh of of how everything goes
and then we want to measure the current state so we can use check sheets or tally sheets how many customers have we
got what's the addressable Market uh any benchmarking data from our benchmarking
things that we have seen before and and there we go some nice data appears then we want to analyze all of that data we
can do that with par charts histograms and again if you don't know these things we'll be covering them later
uh but this is a good thing that you do need to know for your uh PMP exam Affinity diagrams the five y's control
charts uh or regression analysis root cause analysis with a fishbone diagram
and that's what those will look like there pretty cool and then we want to improve it so once we've analyzed it we
can improve it this is where we're actually implementing our project and lastly once we've implemented we want to
see if it's under control we can use control ch starts uh risk diagrams so
failure mode effects analysis is basically a risk register uh or a risk Matrix and a standard operating
procedures to lock in those changes so that's what uh basic demake or Six Sigma
project will look like pretty cool and so that can act as a project Charter for
you as well and the last way so just another version of a project Charter could be our plan do check act and this
is from lean uh so with lean uh the Shu it cycle or the Demming cycle as we
recall we start with our problem statement what's the Gap from where we are to where we want to be and we really
want to base this on the customer-driven metrics of quality delivery and cost so
are we reducing defects are we increasing quality or delivery speed or are we reducing the cost now notice that
all the best businesses in the world do these things Amazon for example delivered uh delivered things quickly
fast delivery at a low cost so they had that and they ended up obliterating
their competitors just something to think about that's what that's going to look like with our project Charter and
then of course we we want to grasp the current situation go to where the work
is done figure out what's happening um again use our par charts or value stream Maps then we're going to plan out our
response um and that's what that is going to look like then we're going to perform the response and do do our
project for our case uh we're going to create the pet buddy mobile app and we'll control that with a Canan board or
uh a Gant chart schedule as we're going along then we're wanting to gather data
uh to see if it worked again use a histogram and other measures and if it
hasn't worked then we can adjust if it has worked we'll lock it in with a standard operating procedure or sop and
lastly we want to look at some lessons learned to see uh if we got the information that we wanted now that we
have our stakeholders and we've initiated our project with all of those wonderful tools we're going to gather
and elicit their requirements and turn them into our project scope we're going to go through 14 Tools in scope there
are a lot of tools that we're going to use in scope management for our project let's get started the first one we'll do
is just a swim Lane flowchart and that's because this is the the easiest to see and the easiest to understand it's also
my favorite because what we're trying to do is just figure out what the customer journey is how the customer flows from
the time that they order to the time where their order is delivered and it's a nice simple way to do it we have the
different areas or this could be anything it could be the different parts of our mobile app it could be the
different parts of the business that we're working in for example marketing or customer service or the actual doggy
dayare area itself but our customer starts here and they might download the app go through that process with a swim
Lane flowchart you've got lots of different icons uh for example a decision point is a diamond and you
might have yes or no or this way or that way for example over here we've got with different logins or social logins and
then we've also got databases and systems so there's a few different icons that you can use but typically it's just
a box uh for a normal process step step by step how are we going through the process and then a diamond for decision
points so that we might go in a few different directions a simple process flow chart is very similar and that can
have swim Lanes as well as we can see but again it's just mostly the diamonds
and mostly the process steps which could also look like a top down flowchart
going from the top to the bottom it just depends on how you want to visualize it there's no right or wrong way as long as
everyone can understand how the customer is flowing and why we're going to be making decisions in the future we can
see the pain points that our customer might be experiencing now in the T production system or lean which came
before agile so it's part of the agile methodology they used to use a value stream map so this is basically a
process flowchart as well and what we're doing here is the C it starts in the top right we have our customer order they
order the item in this case they might need their pet to stay somewhere or they might need a carer to look after their
pet which is what we're trying to create with the pet buddy mobile app so they create their order and then the supplier
which which in this case will be the project Buddy app creates what they need to create with that we just show the
process steps that that happens as well there's many different icons in a value stream map for example this one is a q
uh it's if it's waiting this is a system or database again we might have a messaging system or communication tools
but the real power with a value stream map is down the bottom here is with
these Peaks and troughs and I'll might just increase it a little bit so you can see but the Peaks and troughs on the
Peaks that is calling out any non-value added time nonv value added time is any
time that doesn't directly add value to the customer so for example here it's a
Quee it's waiting so we're spending time waiting it's not directly adding time uh value to our customer but here we're
setting up the profile for our customer and that's the time that it takes to do that we call that out in The Valleys
that's value added time it's directly helping the customer to get what they want on their customer Journey so as you
can see we've got our process steps in our value stream map and a few different icons this one is a pull icon so they
pull the work towards them which is an agile concept you should be coming to to be familiar with there's a supermarket
similar to a supermarket item is how it was named you can pull them off the shelf if there's a small bit of
inventory there lots of different things many many different icons uh too many to go through in a small video but the main
idea is the value added and non-value added time and then at the end it is delivered that's our delivery truck but
it could be any type of delivery could be digital that goes back to our customer and then it goes around in
circles again because our customer will order again goes through the process and we just want to make sure we reduce that
nonv value added time as much as possible another type of map or customer
Journey map that we're going to use as we're figuring out what's what the current situation is and what our scope
is going to look like again business analysts these are very big business analyst tools that our business analysts
can use to figure out the customer journey is a customer Journey map and this one is really wonderful because it
gives us the customer journey in steps the same as everything else step by step what do they do they download the app
set up their profile match the sitter based on location and availability they
view the sitter profiles and reviews they select their sitter and then go through that process but as they're
going through that process how what is their experience how do they feel so at
the at the beginning uh it's they've got a comment here it's nice and easy to use and these are just the general customer
comments that we're seeing maybe it's from customer reviews or customer feedback or focus groups and what are
our customers saying when they're happy in this first step Second Step uh it's
getting a little bit less out of 10 not too satisfied and by the third step it's
very dissatisfied in general for our customers so these are good things for us to look for pain points to address so
that we can create scope to address these things and improve our product there are two other things in a customer
Journey map one is our customer Persona and so we've got our our deal customer
or our the general type of customer that we have this is uh an an example and a
description of that customer just in general so Michelle is a mother of two who has two dogs she needs somewhere to
keep her dogs safe while she travels overseas on holiday and here's an example of what Michelle might look like
as our typical customer what are her expectations we want she wants it to be easy to find and match pet owners to pet
sitters quickly safely and easily and here are the overall steps so when we're
onboarding these are the steps that we're going through when we're searching these are the steps that we're going through when we're booking and the stay
and communication and the completion and review so the customer Journey map is a really great way to figure out the
customer journey and see the pain points and figure out what scope we might need from there our next one in figuring out
the customer process or the process for our mobile app as it flows through in the customer journey is a cypo which
stands for supplier input process step output and customer when we're saying
supplier and customer it's for the actual process step itself so we usually
outline the process first step by step how is the customer going for example they create their profile the pet owner
searches for a pet sitter they book and pay then the pet stays and the pet
sitter communicates with the owner and lastly at the end the pet is picked up and the process is reviewed and ideally
if they do it again they'll go through that whole process again just a nice simple way to see it but for each of
these process steps they have an output so the output is the customer profile up
here and who receives the benefit of that output that's the customer of that
process so it's not the overall customer although it can be but the customer is
whoever receives the output of that particular process likewise the supplier
of that process is whoever provides the input for that process step so now you
can see that even though we've got our process steps from top to bottom each of those process steps has a supplier and
an input so what they need to create that process step the process step itself the output of that process and
then who receives the benefit of that process step and then we get a really
beautiful map of all of those inputs and outputs and what we need to do to get
that process done and that is our cypo a really really nice way to do it now as we move on with our scope we don't want
to just map out the customer Journey we also need to map out and make visible
the systems and the systems that we're working with and how the system interacts or how we want it to interact
for example one way is with a unified modeling language sequence diagram which
is basically just the sequence uh that the information flows we've got our
customer at the beginning again so you're seeing a theme Here It usually starts with the customer and goes
through a system or a process of some sort and it goes from left to right and
top to bottom on our sequence diagram so our example here is our customer enters
their details into the mobile app home and you can see we're describing different parts of the system here that
the information might flow through or even different systems that interact together so this is where we uh start to
look into more of the technical side of things it goes into the customer database their name and details and then
they process the payment with the payment system so this could be part of the overall system or a different system
itself that's connected then that information goes back to a message to the customer so you can see how it flows
the these blocks or these rectangles are how long this particular part of the
system is active four so as you can see it needs to be active for all of these
things to go through for that entire time but for the payment system it's only active for the time that we're
making that payment so it's a short amount of time and that's a really nice way to see how our system interacts
another part of our system or to map out our system is a context diagram and so
this is where we're starting to delve into the architecture so again figuring out the solutions figuring out the
require requirements putting those together that's going to create uh the scope for our project but here is our
context diagram or a data flow diagram this again shows the different systems and how the information flows through
those systems for example we've got our pet buddy mobile app in the center here interacting with different systems and
different parts of the system so our payment system over here with our payment details approved going back to
our customer database and information from social networks if we're adding
details through social media with customer preferences going back into our customer database again lots of
different ways this is our little architecture diagram for the system and it could be small or it could be huge I
have seen and worked with some uh context diagrams you might have pictures of the different systems in here just to
as a nice representation and then they look really nice uh I've seen some massive architecture documents with lots
of interacting systems but this is a much easier way to display it and now we
can see it everyone's on the same page all right now we've visualized our process we've visualized our system now
it's time for our team to come together and brainstorm ideas to meet our
customer requirements and we're going to do a few different things here there's many different ways to do it just
general brainstorming uh but using putting them into buckets so putting grouping them together in similar ideas
so what we're going to do with our team is just write down all of the ideas that will meet the requirements that we need
within the system that we're working with so we've got our system design and our customer process and here are all
the ideas that our team are going to come up with but we want to group them into different buckets so we've got all
of the user profile ideas all of the search and matchmaking ideas all of the booking and scheduling ideas Payment
Processing ratings and reviews so the team comes up with lots of different ideas but we can group them together in
those different buckets that's Affinity brainstorming now we could also show that in an affinity diagram because
we're grouping things with an affinity to each other they they're similar to each other and this is a really nice way
to visualize it this is our Affinity diagram as you can see here are the ideas that our team have come up with
all of the ones that are around booking and scheduling all of the ones that are around user profiles search or payment
processing and any other buckets that we want to group our brainstormed ideas together with one of the great ways that
we can do brainstorming is the nominal group technique remember the nominal group technique is anonymous so
typically we write down the ideas so the team will write down their ideas on the left here uh or all together and then
they'll reveal them at the same time so that way we're not influenced by our manager or by the highest paid person or
even the loudest person in the room we all get to have a proper say so that's
one of the benefits of the nominal group technique another way to visualize this and to break it all down is a mind map
so we're going to see mind maps uh when we're dealing with scope and when our business analysts are breaking down
things and creating scope for our project we've got our pet buddy mobile app and this just uh is a way to
decompose the idea so we get our main idea in the center then the next smaller
idea which is our search algorithm and then all of the ideas underneath search
and matchmaking so here are all the brainstormed ideas that our team came up with within the bucket of search and
matchmaking and the same thing for ratings and reviews and we can break it down even further if we want to uh but
this is just a really nice way to visualize it again using that mind map idea and now we've got a whole bunch of
ideas for scope and we've got the requirements uh that we came up with originally now it is time for us to put
together one of the most important documents on our project and that's the requirements traceability Matrix It
traces the requirement that we originally had uh that we figured out
and how that matches up to the scope that we're delivering so for example
these uh these requirements on the left our customer wants to allow pet owners
to create and manage their personal uh details and to get their pet details as
well how are they going to do that this is the scope item that we're going to deliver is through user profiles so
that's one of our features and then we've got user stories or smaller user
stories within that feature and that's our pet owner profiles it might be a user story uh if we're working with
agile or a work package if we're working on a normal project we're going to have the different IDs so we want it to be
tested as well we want our test case ID who it's assigned to and where it currently is so now we can see the
customer requirement how we're meeting that with the scope and is it being
quality tested and then is it finished or is it uh in progress we're tracing it
from start to finish from the requirement all the way through to done we can also break that down once we've
got that in our work breakdown structure which is just another way to decompose
the item as you can see we've got our pet Buddy app it's similar to our mind map in this way we break it down into
the the next highest level items user profiles these are our deliverables or our features booking and scheduling and
then under that these are our work packages and our or our user stories and you could break it down even further
again if you really needed to and then the last one for scope before we get to prioritization is our work breakdown
structure dictionary or WBS dictionary so this is like our work breakdown
structure but it adds all of the extra information that we need about each
particular item so this is really the heart of our project in this WBS
dictionary it goes from our feature as you can see here with a unique ID and
then the different work packages or user stories that we've got here the description of these uh it gives the
description on what we're delivering who we need to create it the duration so our
schedule duration the costs to create that particular item the current status
and then our quality acceptance criteria and we've got this as our user story uh
type acceptance criteria as a pet owner I want to create a profile for my pet so
that I so that potential sitters can learn about my pet's personality needs and preferences and that's how we're
going to meet that quality criteria for that user story or work package who is
assigned to the start date and the Finish date and now putting all of those things together we've got a wonderful
visual idea and and all of that information has been pulled out of our heads into a visual map of our system a
visual map of our customer process and a visual display of all of the scope and
requirements that we need to meet our customer requirements for this project to have success and now that we've done
that we need to look at which of those items are most important to our stakeholders we need to prioritize them
here are the six prioritization tools that we're going to go through this is going to be a whole bunch of fun as always let's get straight into the first
one and that is is our prioritization Matrix as you can see from our scope
we've got all of our features that we're wanting to deliver and we're going to rank these by two different ways or you
could add a different way if you preferred but cost over benefit so what's the cost of the item uh to create
and what's the benefit that we're going to get from it and we're just going to rank these from 1 to 10 so a high
benefit or value or a high cost or effort and once we've done that it goes on this beauti little Matrix and as you
can see we can use that to prioritize if we've got a high cost over here but a
low benefit then it means we probably are not going to want to prioritize that very highly however if we've got a high
benefit over here and we've also got a low cost or a low effort then these are
the ones that we really want to focus on first we're going to get the biggest bang for our buck to do these ones and
it's going to be a little bit faster than doing the the High effort or the high cost items we can use the same idea
with our prioritization Matrix uh with Moscow so Moscow is must have should
have MS CW so could have and won't have or will not have and all we're doing
here is just prioritizing these into a quadrant so our quadrant of won't have
which is high cost and low uh benefit but High benefit and low cost we must
have those items and then in in between there is our should have and could have
items so this is a great way to prioritize what we're going to do first if you don't want to do it with actual
numbers or ranking from 1 to 10 we can actually just ask our stakeholders using
Moscow again so with our stakeholders we will say which one which features must we have which features should we have
which features could we have and which features will won't we have and it's just from top to bottom ranking
basically the highest priority to the lowest priority and we can put those on our Moscow Moscow chart user profiles we
just put a must have over here we've got dog sitting add-ons won't have could
have uh booking and scheduling or whichever ones we're going to prioritize in whichever way as we ask our
stakeholders one tip here in the real world when you're doing this if you're asking your stakeholders what are they
going to say they're going to say that everything is a must have and so this happens all the time what you can do in
that situation is just have uh five for each bucket or you can divide them into
four so however many uh for each particular bucket we say to our stakeholders okay we can only have five
must haves five should haves five could haves and five won't haves so if we've got too many must haves we're going to
have to bump some of them back and that's a really nice way to do it uh nice low conflict easy for everyone to
understand on our project we can have trade-off sliders as well so that's uh
what is the most fixed on our project are we going for time we absolutely must meet our schedule uh but most flexible
maybe we've got we can change our scope if we want to if we're working on an agile project but we can change this uh
it's a nice way to look at our project overall now a similar idea that we're going to come across uh when we're
prioritizing is Kano analysis and Kano analysis just uh puts three different
buckets and that is our musthave quality our satisfying quality and our
delighting quality and the way Koo analysis works is this it's the satisfaction level of the feature so how
satisfying is it to our customers from 1 to 10 but then where is that item within
its product life cycle so is it very very new or is it has it been around for
quite some time and that's how Kano analysis works because over time we become used to these features and they
become less delightful for example electric windows in your car in the 80s
and '90s that was an absolute delighter it was a fantastic invention but now
over time because it's at the end of its life cycle really uh if you don't have electric windows in your car then you
probably won't even consider that car to begin with so using that we can rank our features and have mus haves uh
satisfying features and then features that are delightful to our customers
those ones we may not need to do until we've met our musthaves and our
satisfying quality for Cano analysis another great way to prioritize and this is one of my favorites especially when
you've got complex situations and lots of stakeholders involved multicriteria
decision chart this is where we have our features that we're trying to prioritize up the top and down the side we've got
the criteria that we can decide on that we want to rank them by and we just rank
them from 1 to five or 0 to 5 uh especially as well for example our user
profiles we're we're ranking them here by customer satisfaction ease of use
ease of solution and when you've got lots of different stakeholders with competing needs this is very useful
because we can put some of all of their different competing needs into this criteria that we choose and then we rank
them from 1 to five and then at the end we've got a nice average or it could be the total you can choose which one I
prefer the average uh but now we can see the highest ones that's a really great way to prioritize and there's a few
other ways just to finish off prioritization we can do simple voting with our stakeholders and we could vote
with Monopoly money or voting with dots or voting with points it doesn't matter what we call it it's multiv voting you
might have uh 10 votes or you might have 100 points to distribute across all of
the the scope and you might put all of your 100 points on one item to really
try and get it across the line or you might distribute it with 10 per uh scope
item that you really want so that's multiv voting is a nice way to do it of course uh you can have unanimous votes
the majority which is just more than 50% or just the largest block which is plurality but that's more for now we're
just starting to get into project management education here it's not really a tool but one of the tools that you will come across the last one that
we have is the cost of delay this one is where we look at the expected weekly
profit once the item is delivered and this is a hypothesis we never know this for sure but we have an idea so we say
Okay user profiles is going to give us uh a high weekly profit and the duration
to deliver it is going to take 2 weeks so we take 6,500 divided by 2 and that
gives us our cost of delay also called CD3 and then we simply prioritize this
from highest to lowest really really simple this is a great way to do it
because it it sort of is like the cost to benefit as well this is our our effort and this is our benefit or value
over effort for example and then we just rank them from the highest to lowest so the cost of delay can work really really
well and those are all the ways that we can prioritize the scope on our project as we're creating our puddy mobile app
and now that we've done that we need to look at when we can deliver those items by putting them together on our project
schedule what we're going to look at now is four of the main schedule tools let's get straight into the first one now
remember we've got all of our scope and we've got this is our scope in the work breakdown structure dictionary and our
main features over on the Le hand side this is important because we're going to put these together on a schedule Network
diagram and all this does is shows the order that we want to deliver things in
in and then once we estimate these durations it can also show us the critical path now the example here is uh
we've got all of our features just in uh in order in the order that we want to deliver those things in or that we have
to deliver things in if they've got dependencies on other items now in the middle here these are our durations so 5
weeks 3 weeks 4 weeks to deliver these things for example and then as we go
through the forward and the backward pass we can figure figure out our critical path the path with the least
wiggle room or the least float or the least slack is our critical path because
we can't really move anything on that critical path uh without moving the entire schedule so this is a pretty cool
diagram and it's a pretty cool thing to do on your project because one it figure figures out the uh order that we want to
deliver things in and two it determines our critical path so this path we really
can't move things on without it affecting our entire shed a much more simple version or just our overall
project schedule is usually done on a Gant chart it could just be a project schedule it could be done in any way but
a Gant chart is the probably the most common way that you'll see you've got uh the items the calendar up the top here
and then the items that we're going to deliver and our start and end dates and then it just shows us when these items
are going to be delivered on the calendar so it's a really nice visual a Gant chart is a fantastic way to show
our project schedule and you can do it on a weekly basis which that one was or a daily basis this is just a version in
Excel that I've created and as you can see on our daily chart then it shows when we're going to be finished based on
all of those things put together now once we've got the durations and for each of these particular items we want
to estimate these durations with our team so how long does our team think
it's going to take we can add those durations back into our work break breakdown structure dictionary which if
you remember is basically like a database of all of the information on our projects we've got the feature the
work package the description the resources that we need the duration Quality Acceptance criteria and
everything there so now that we've got the durations we can put them back into the WBS dictionary now as we move along
with our project we may work in Sprints or we may visualize our work on a kban
board this is a schedule in a way as well it's not like a Gant chart but if we got a two- we Sprint and these are
the features that we want to deliver during that Sprint we can visualize this on a kban board with our cards as the
features that we're going to deliver and as they as everyone works on them now this one these ones are in development
these ones are in analysis these ones are in test it's just been completed and it moves into sign off and as they move
along then uh we want to complete them and get them into done so that we can release them into the main branch of the
system and this is just a really great way to visualize that work on a shorter term basis in that 2 we Sprint or two we
iteration another tool that we can use that is primarily an agile tool is our
Sprint burndown chart which looks like this what this is is all of the initial
estimates for the items that we're looking to complete in the Sprint or the iteration of two weeks or however long
our iteration is usually it's 2 weeks so we've got our initial estimates there and then as they get get completed here
they are being completed over the 10day Sprint or the 2 we Sprint now this is what it looks like this is our ideal
Trend this is uh in an Ideal World this is how it would look now this one is a
funny one look at this it goes back up and that is either when that happens we've got either another card being
added into the Sprint or we've actually reestimated during the Sprint so both of
those are not very good practice we really don't want to do that but again in the real world nothing's perfect we
may have to do these things sometimes so in this case uh we just had to add a bit of extra effort the dog sitter profiles
took way longer than we expected and so they've added the extra effort to that
card and then ultimately completed it still but that's why it looks like that but it could look like that if we've
added an extra card to the iteration or the Sprint as well and that's our Sprint burndown chart and now all in all we
have a great VIs ual idea of when our project is going to be completed and we can clearly see if we're on track or off
track using these schedule tools now it's time to look at the project cost and what we need to budget to complete
our project there are four tools you need to know to manage cost on your project can you name all of them we've
got our project budget here but the first thing we're going to do is go back to our work breakdown structure
dictionary remember this is where we have all of our scope and it's really a nice database B of all of our scope and
project information we recently for our schedule just put the duration estimates
for each of these items and now with our team we're also going to estimate the cost of each of these items so here we
are here we can go through and estimate these with the team and then put these back into our work breakdown structure
dictionary so now we know for each item how much we estimate that these are going to cost just a brief note while
we're here on Commercial databases to estimate these things we could go go to
existing commercial databases this would be places that have information on what we're trying to deliver to give us an
idea of how much it might cost now this is going to vary depending on the industry that you're in if you're in
construction you might have some pretty clear commercial databases that gives you a really nice idea of what the cost
is going to be and it can get pretty close or the same thing in software we might have uh existing ideas on how much
these things will cost so we can estimate these with our team but we can also get additional data from any of
these databases that exist out there in the real world we don't just have to put this in our work breakdown structure
dictionary we can also add these items or add the cost items to our work breakdown structure if you want to
visualize it like this now we can do our bottom up estimating which is where we
have all of the small items like work packages or user stories and then we add them all together to get the cost for
the feature and then we add all the features together to get the cost for our project so we're gradually
aggregating all of those costs to get the overall cost now once we've done that we can put that together on our
budget so with our budget as you can see we've got our items down the Le hand side here and then we've got how much we
budgeted for these particular items as we go along on our project we're going
to either spend more or less and we can see here in red we've spent more and in
green we've spent less so it does that automatically which is really really nice and then at the end uh for our
total and I'll just bring this in a little bit there we go that's a bit nicer we can see as well if we've spent more for that particular feature which
is red or less which is green so what we've budgeted versus what we've actually spent and when we put that
together we can actually put that together on a nice chart so we can see how we are tracking this is our actual
cost in green and what we've budgeted our planned value is in Orange that's
our ideal Trend so over the course of the pet buddy mobile app we have spent a tiny bit more uh not too much more which
is nice but this is something that we'll have to manage as project managers now the last thing is uh or two things our
approved project budget will include contingency reserves and management reserves now in the real world you may
not have the benefit of these uh sometimes projects just don't include them but what we're going to use here is
contingency reserves for any known risks we've got our estimates for the main
features and on our project we've got a contingency reserve for any known risks which we're going to add for
$35,000 we've also got a management reserve for any unforeseen scope or project changes that will be approved
that we need to do and that's $80,000 now we don't get that money automatically um but it will go into our
overall project budget with making it $880,000 but what we're going to do is
have periodic funding requirements so for our contingency reserve and management Reserve that will need to be
uh approved and only used as required so hopefully we don't have to use these two
things but if we do uh we've got the Milestone requirement or the funding
requirement here outlined in our plan so for our contingency reserve has to be
the risk response has to be approved by our business owner Samantha Young and the management Reserve any changed or
additional scope outside the project budget has to be approved by our project sponsor am Samantha young as well and
then we have other periodic funding so we start out with $200,000 and we get more funding just as long as the project
is working if it's not then it may be cut off so we do need to see consistent releases coming through over the Project
Life Cycle and here's what that's going to look like just on a milestone chart we start off with our initial $200,000
to to get the ball rolled and as we're delivering and as the project is progressing along and if we
see sufficient progress then we've got release 1 2 3 four and ultimately the
project to be completed and released at the end and those are four and maybe a bit more of our cost tools that we're
going to see on our project and in the Perot guide which leads us into how we manage quality on our project and the
tools we'll use to deliver on our customer requirements here are seven things we're going to go through how
many of these can you guess before we get there let's find out starting with our test and inspection plan or test and
evaluation documents that we have here so this is where we're outlining our test approach we have Macy our test lead
and Jack our tester and we're going to be outlining what we're testing so the test or acceptance criteria the
deliverable that we're testing and whether it passes or fails that test or acceptance criteria usually called AC's
or acceptance criteria here we've done our acceptance criteria just as a I want
I can that's a typical user story method you might use many other methods just a step by step to reproduce any issues or
stepbystep to test the item once they've tested these items they can put all of the outcomes in the test and evaluation
documents and some screenshots if things go wrong and the steps to reproduce any
issues that happen now of course we're going to put the acceptance criteria in our trusty work breakdown structure
dictionary as well remember that work breakdown structure dictionary we've come back to it every single time these
are attributes that we're adding from our project into each of the items of
our scope so it's goes from all the way to the left to the right duration cost and resources for each particular item
of scope and now the quality needs as well so we're adding that acceptance
criteria and who it's currently assigned to back into our work breakdown structure dictionary as attributes now
as we get started with testing these things things as they're developed we can start first of all with a control
chart to see if our process or our app or the things that we're measuring are in control this particular example is
the pet buddy bookings versus cancellations and if we've got more bookings then it's in positive territory
and if we've got uh more cancellations then it's goes into negative territory and as you can see it's just a simple
line chart at its most basic but the real key here is having average so this
is the average of all of the data and that ends up being right in the middle and then we have upper control limits
and lower control limits now traditionally on a control chart that is three times the standard deviation of
all our data and you can do that very simply just with a standard deviation formula that you can see here so we can
easily get the standard deviation and again traditionally that is three times
uh away from the average but what I've done here is just made it one times away from the average because what I actually
find in the real world is three times is too much so it ends up being way outside
and we it's never out of control basically so as you can see here we've got uh it starts getting a little bit
too much we might not be able to keep up here and down here if we're canceling too many then we really need to figure
out why our process is also out of control and so we need to look into that as Macy and Jack go through their
testing process they're also going to find defects and what they're going to do here is just take a tally sheet or a
check sheet of all of the defects that they find and what that looks like is here we've got some defects like booking
failures uh display issues the app might freeze here or there and they're just
going to put these uh uh check them every time it happens and so as you can see some of them happen more than others
but what we can do then is start to look at which one is happening the most it's our check sheet and now we get a good
idea of where we really need to focus our effort because as you can see here
sitter availability mismatch is occurring the most it's probably going to cause the most issues for us so this
is a simple check sheet a nice way to count defects now a more advanced version of a check sheet is a par chart
and with a par chart it's the same thing where counting those defects down the side here as you can see but the real
magic here is that we're then sorting them from largest to smallest so on our
par chart with our pet buddy defects where we've got the highest on the left here so we know which one that we want
to focus on over on the right hand side is a cumulative percentage so all of
these are added up as a percentage until it gets to 100% all the way at the end
the key with the Paro chart is it's based on the Paro principle which is that 80% of the outcomes happen from 20%
of the inputs and it happens everywhere throughout life so 20% of the people own
80% of the wealth 20% of our workers do 80% of the of the work I don't know if
you've ever experienced that in a project team and 20% of our defects cause 80% of the overall issues and so
that's what we're looking at here we've got our 80% line and we can see where these two things intersect we've got 1 2
3 4 5 these are our top five defects so that's causing 80% of the issues now it
doesn't have to be 80% it's an arbitrary number but the point is that a small amount of the inputs cause a large
amount of the outputs or the issues or the things that we're looking at so if we were to uh make that lower and make
it down to 60% then we could focus on the top three defects or the top four defects and those would be the ones that
we would prioritize and work on first now once we've found those defects and
once Macy and Jack have found those defects and prioritized which ones they want to work on first then we can do
some root cause analysis on those defects to figure out the real cause of
those problems and what we've got here is an Ishikawa diagram also known as a
fishbone diagram or just a root cause analysis chart uh but this one is for
the root cause analysis of the mismatch in Sitter availability so if it if a
sitter says that they are available but then they're actually not and there's a mismatch there that's our problem or
opportunity and we note that in the head of the fish so as you can see this looks a bit like a fish fish bone there's
another way to look at it it could be as a diagram as you've got here so this one looks more like a fish so that's a
little bit nicer but that's another way to look at it this one's nice cuz it does all of the calculations for us
already in the cells of excel so that's pretty cool now with this then we come up with reasons why this defect happens
and we do them in the brainstorming buckets of people issues information
issues process issues and system issues and it's just a nice way to group any
brainstormed ideas for the root cause of sitter availability mismatch and then
once we've done that another way to do root cause analysis in our project is the five y's where we have our issue or
our defect in this case case it's glitches in the booking logic that we're looking at and we simply ask why is it
happening and we ask why until we get to the real cause of the issue now the reason why we keep asking why is because
usually the first answer might be a symptom or or one of the reasons but
it's not the final reason that an issue is happening we're wanting to dig deeper
and dig deeper until we really figure out the core reason why this is
happening and this is what it looks like here so glitches in the booking logic why did it happen because uh it allows
two pet owners to book at the same sit for overlapping time slots so that's not very good but is that the root cause no
until we get to the answer of the booking system doesn't Implement proper concurrency control which is something
that we actually could Implement in this particular mobile app so if we do that is that going to solve the real root
cause of the problem and the answer is yes so once we've figured out the root cause we can take some actions and then
we know Macy and Jack have done a wonderful job in quality for this mobile app pet buddy as we go along on our
project we're going to need to manage the people in our team and any other resources we need to complete our
project we've got four tools to manage resources on our project that you absolutely must know we're going to show
you what they look like and how to use them and the first one we're going to start with is our racy which stands for
responsible who is responsible who's accountable or who needs to sign off on
a task who is consulted or who provides their expert judgment or who is kept
informed on the project and Billy our project manager is going through this with the team to make sure that everyone
is really clear on their roles and responsibilities throughout the project
and what this one looks like for pet buddy is we've got all of our roles down the left hand side got project sponsor
project manager a business analysts senior user developers and testers and some subject matter experts here as well
and then up the top we have all of the deliverables or things that our team might be responsible for for example the
uh project plan Billy is are responsible for creating that project plan but the
source code we've got our developers Max our senior developer is accountable he
needs to sign off and do a shoulder check of the code but Olivia Liam and Isa who are our developers are
responsible for the source code itself so this is a great way now everyone is really clear on what they need to do
throughout the pet buddy project and what Billy's going to do next is get everyone together and agree on the
team's ways of working in a team charter the team charter outlines a whole bunch
of things and we start with the background of the project why are we doing it what's the overall mission of
the project Samantha wants this mobile application that matches pets considers to pet owners so she can expand her
business and create the Uber for pet stays we've got our team roles with the project sponsor project manager business
analysts any stakeholders we're going to be working with and then it gets into our ways of working so our team values
what do we care about when it comes to our team do we want always to be on time should we never miss a standup no matter
what should we always be available for requirements checking or for code inspections or whatever that looks like
whatever our team team cares about for our team values and that can change amongst different teams the team
communication we're going to be collocated so ideally we're just going to work together but that could be over
messaging software it could be video communication of teleconferencing or all of those sorts of things if we need it
the decision process who makes the scope decisions who makes ways of working and adjustments uh who makes estimates on
their work and any conflict processes what do we do if we can't agree
and then we've got our team ceremonies when are they happening and what do we need to do and we'll also include our
definition of ready so when an item is ready to be worked on it has acceptance criteria it's been checked by the
product owner for example and the definition of done so when a an item has been developed and tested and it's
passed and signed off by the product owner again so all of that comes together to make it really clear that we
know how we're going to be working on the pet bodyy app now one thing we can add in here here this one's not in the
pinbot guide but this is one that I like to do and it is just get together and see if we can figure out the regular
meeting Cadence now obviously don't have a lot of meetings if you can help it we want to be focused on the work and
really we only want uh meetings to confirm something that absolutely needs to be confirmed face to face or together
so in many of the agile teams I've worked in we'll have user story elaboration usually twice a week and
then just ad hoc any other times that we need to get more details on the acceptance criteria for the scope that
we're working on but in the morning we could have a daily standup or if it's better suited we could have it in the
afternoon so this is just a great way we can move these around and we can get everyone together and say what's the best time that the team can meet do we
have other commitments or are there time zone differences that we need to be aware of and let's arrange these regular
meetings and then lastly as we've been working together in a team for some time we're going to go through a
retrospective a retrospective is an agile term or an agile idea where we meet at the end of our iteration usually
in iteration is two weeks where we've delivered a small item to the customer so they can see it and uh give their
feedback and then a retrospective is for us to improve our ways of working as a team so our whole project team is going
to get together we've got probably not Samantha the project sponsor but probably everyone else who's actually
working within the project developers business analysts testers and Billy our project manager could potentially run
this as well and what we're going to ask uh four questions what went well during
the Sprint so maybe we communicated clearly maybe we got everything done that we needed to get done but then
we've got challenges what could be improved maybe uh the some of the items were not fully elaborated or scoped
causing a bit of last minute scrambling then lessons what have we learned the initial task estimations were off maybe
we need to figure out a better way to estimate things like that what are we going to learn going forward and is
there anything that still puzzles us maybe our team is unsure how the app is going to be received by a wider user
base and so the product owner could give some clarification there or some ideas but here we can raise those questions
and again in a safe environment and take all of these things the improvements even the successes and take some actions
and say how are we going to improve these for next time as we're going through our project and as we improve
little by little we become an amazing High performing team and those are all the resource documents and resource
tools that you'll come across in your project now it's time to find and manage any risks on our project here are seven
of the most important risk management tools how many of these can you name already let's start with the main one
and the most important one which is our risk assessment Matrix and what we're usually doing here is uh brainstorming
risks with our project team remember a risk is something that could impact us
in the future it hasn't happened yet so we're planning for the future and as we
plan we look at the probability that something is going to happen and the impact when it does happen now in this
risk Matrix I've put them from very low to very high so five items here but you
could rate them from 1 to five as well typically you then take those numbers so
1: 5 and 1: 5 and you multiply them together to give you your overall risk
rating but in this case I've put them as words just because it's a little bit nicer and then we put a control so we
try and control that risk and say what we're going to do to mitigate that risk and once we do that usually the overall
risk is going to be lower it might reduce the impact or it might reduce the probability of that risk from happening
and then we've got better situation if we have that control in place and a risk
Matrix typically looks like this as you can see before the controls we've got
lots of different risks uh this is our Matrix with medium and low or medium and medium here are our critical risks over
here with high probability and a high impact and so we've got some critical risks that we really don't want to be uh
left alone we don't want these outstanding so we put the controls in place that we've named over here we we
might test different pricing strategies we might ensure s a verification for our
pet buddy mobile app and once we have those controls then it's starting to look a lot better it brings them back
under control we've now got some sustainable risks and some moderate risks only and nothing in our critical
or severe I absolutely love this risk assessment template and it does all of that automatically for you once you
input your brainstormed risks and that's the most important place to start now how do we brainstorm risks with our team
well there are a few ways and the two most popular are SWAT analysis and
pastel or pesel analysis depending on how you want to show it but SWAT is our
strengths weaknesses opportunities and threats and typically our risks are
going to come from our weaknesses in the project and threats from outside the
project for example there might be major players externally who are already
dominating the pet sitter Market that we're trying to enter or there might be
pet owners might cut back on Services during a downturn these are things external that we usually can't control
that we might have to address and our weaknesses we might have a Reliance on
the business owner's personal brand or we might have user trust concerns for
pets because they're leaving their beloved pets with other pet sitters and so we need to address those trust
concerns these are wonderful ways to brainstorm risks with our SWAT analysis
and a similar one is pastel or pesel again depending on how you want to arrange those letters but that is
political risks environmental risks social risks technological risks
economic and legal risks now these could be opportunities as well remember risk
doesn't have to be negative it can be positive it could be an opportunity if it hasn't happened yet and it's
something in the future uh but it's a positive risk then it's an opportunity for us so just remember that one but
some things we might come up with our AI driven ma matchmaking wearable pet Tech
so our pets might have wearable tech that they can use and and integrate with our mobile app zoning laws might impact
us from a legal perspective so lots of things that we need to be aware of that can now go into our risk assessment
Matrix now once we've brainstormed all of our risks and we've come up with the qualitative measures like likelihood and
impact that we saw before now it's time to come up with some more quantitative measures of our risks and that's where
we're looking at actual data and actual numbers and simulations and we're
delving into these risks a little bit more deeply one way to do this is with decision tree analysis where we have our
decision at the left hand side here and then we look at the costs for each DEC
decision and the probability of things happening as they go along now as we
continue along this journey with different probabilities and different costs or benefits it gives us an outcome
at the end for example as we expand do we use aggressive paid marketing or do
we use sponsorships and referrals so these are our two options one costs 500,000 the other one costs 200,000 now
as we go along we've got a 60% chance of demand but for sponsorships a 75% chance
of strong demand and the outcome here is a $200,000 benefit with a 45% chance but
the outcome for aggressive paid marketing is also a $200,000 outcome but
a 42% chance so overall it looks like our sponsorships and referrals might be
the best decision path or decision tree for us to go down and now we've gathered
that data on the controls or the mitigations that we could put in place another way to analyze risks and
opportunities is with a force field analysis here is our opportunity or our
risk that we're looking at in the middle we're developing an aid driven matchmaking algorithm so that was one of
the things in our pastel analysis that we were looking at and the way force field analysis works is like this we've
got our decision in the middle and the forces for it on the left hand side and
the forces is against it on the right hand side and then we rank them from 1
to five so how strong is that Force High development costs might be a very very
strong force against developing an aid driven matchmaking algorithm uh but
algorithm bias and errors might just be a very small Force so down here now once
we have ranked these both on the positive and on the negative side then we to add them together for example
before I moved all of these around we had 15 in total as forces against this
change but we had 14 in total for the change so it looks like it's probably
not going to be a great way going forward or it's very close we can look into that in a bit more detail But
ultimately the forces against it are stronger that's a wonderful way to gather more data on our risks and
opportunities and lastly another way that we can analyze these things is with sensitivity analysis or a tornado chart
for this sensitivity analysis what we're looking at is how the commission per sit
so the commission that we're paying the pet sitters how that changes the revenue
overall for example if we have a 5% Revenue share with our sitters then it
looks like we've got positive Revenue over here of 320,000 10% is also positive at 29
90,000 but as soon as we start getting up so 15% Revenue share then it actually
negatively impacts the overall Revenue people stop doing sits with us or they
start using other apps and then 20% is positive 25% is negative now this could
go many different ways and it's really up to the data that you collect and this is just an example but the idea is that
this looks like a tornado in the end because we have some negative values and we have some positive values we rank
them from the highest to the lowest whether it's positive or negative and now it looks like a tornado this could
be many different things this could be positive value that we're delivering in our team versus negative risks that
we're trying to mitigate in our team and again ranking these to prioritize the
highest value and the highest risks over the lowest value and the lowest risks and this is the last great way to gather
more data on our risks and overall six wonderful tools that you're going to find in Risk Management on your project
and here we are you made it through to the very end we've been through 63 of the most essential project management
tools how many of those did you already know and how many did you learn now that you know these you can definitely run
any project better and find the success that you truly deserve keep going I believe in you and I'll see you in the
next video bye for now